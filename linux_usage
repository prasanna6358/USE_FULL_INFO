upgrade to the lastest version of git
----------------------------------------
sudo apt-add-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git

to check git version :-  git --version
========================================

To execute scripts in linux
----------------------------
make a folder with any name and add path to bashrc file

created a folder with name bin in home path

export PATH=$PATH:~/home/prasanna/bin/

create a file with any name no extention
test

change permissions 

chmod +x finename
write some script it test file

and execute file name like a command
=======================================

to install docker in linux ubuntu.16.0.x
--------------------------------------------
for docker installation use the below link:
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04

command1:sudo apt-get update

command2:sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

command3:sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'

command4:sudo apt-get update

command5:apt-cache policy docker-engine


You should see output similar to the follow:
Output of apt-cache policy docker-engine

docker-engine:
  Installed: (none)
  Candidate: 1.11.1-0~xenial
  Version table:
     1.11.1-0~xenial 500
        500 https://apt.dockerproject.org/repo ubuntu-xenial/main amd64 Packages
     1.11.0-0~xenial 500
        500 https://apt.dockerproject.org/repo ubuntu-xenial/main amd64 Packages


Finally, install Docker:

command6:sudo apt-get install -y docker-engine

check the status of Docker:
command7:sudo systemctl status docker


If you want to avoid typing sudo whenever you run the docker command, add your username to the docker group:

    sudo usermod -aG docker ${USER}

To apply the new group membership, you can log out of the server and back in, or you can type the following:

    su - ${USER}
then type password no need to use sudo after this.

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

